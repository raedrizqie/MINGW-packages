# Contributor: Raed Rizqie <raed.rizqie@gmail.com>

_realname=directx-shader-compiler
_pkgname=DirectXShaderCompiler
pkgbase=mingw-w64-${_realname}
pkgname=${MINGW_PACKAGE_PREFIX}-${_realname}
pkgver=1.8.2505.1
pkgrel=1
pkgdesc='A compiler for HLSL to DXIL (mingw-w64)'
arch=('any')
mingw_arch=('ucrt64' 'clang64')
url='https://github.com/microsoft/DirectXShaderCompiler'
license=('spdx:MIT AND MS-PL AND LLVM-exceptions')
makedepends=("${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-lld"
             "${MINGW_PACKAGE_PREFIX}-llvm-tools"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-python"
             "git")
source=(https://github.com/microsoft/DirectXShaderCompiler/archive/refs/tags/v${pkgver}.tar.gz
        001-cmake-mingw-fixes.patch
        002-headers-update.patch
        003-lib-sources-fixes.patch
        004-clang-tools-fixes.patch
        005-llvm-coff-conflicts.patch)
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Np1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd ${_pkgname}-${pkgver}

  apply_patch_with_msg \
    001-cmake-mingw-fixes.patch \
    002-headers-update.patch \
    003-lib-sources-fixes.patch \
    004-clang-tools-fixes.patch \
    005-llvm-coff-conflicts.patch
}

build() {
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  cmake -Wno-dev \
    -GNinja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCMAKE_RC_COMPILER=${MINGW_PREFIX}/bin/llvm-rc \
    -DPython3_EXECUTABLE=${MINGW_PREFIX}/bin/python \
    -DHLSL_BUILD_DXILCONV=OFF \
    -DHLSL_ENABLE_FIXED_VER=ON \
    -DHLSL_INCLUDE_TESTS=OFF \
    -DHLSL_OFFICIAL_BUILD=ON \
    -DLLVM_BUILD_STATIC=ON \
    -DLLVM_BUILD_TOOLS=OFF \
    -DLLVM_ENABLE_LIBCXX=OFF \
    -DLLVM_ENABLE_LTO=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_USE_LINKER=lld \
    -DSPIRV_BUILD_TESTS=OFF \
    -DENABLE_SPIRV_CODEGEN=OFF \
    -C ${_pkgname}-${pkgver}/cmake/caches/PredefinedParams.cmake \
    -S ${_pkgname}-${pkgver} \
    -B build-${MSYSTEM}

  cmake --build build-${MSYSTEM}
}

package() {
  cd build-${MSYSTEM}

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  install -Dm755 bin/dx*.exe        "${pkgdir}"${MINGW_PREFIX}/bin
  install -Dm755 bin/dxcompiler.dll "${pkgdir}"${MINGW_PREFIX}/bin/dxcompiler.dll
  install -Dm755 bin/dxil.dll       "${pkgdir}"${MINGW_PREFIX}/bin/dxil.dll

  install -Dm755 lib/libdxcompiler.dll.a "${pkgdir}"${MINGW_PREFIX}/lib/libdxcompiler.dll.a
  install -Dm755 lib/libdxil.dll.a       "${pkgdir}"${MINGW_PREFIX}/lib/libdxil.dll.a

  install -Dm644 ../${_pkgname}-${pkgver}/include/dxc/dxcapi.h    "${pkgdir}"${MINGW_PREFIX}/include/dxc/dxcapi.h
  install -Dm644 ../${_pkgname}-${pkgver}/include/dxc/dxcerrors.h "${pkgdir}"${MINGW_PREFIX}/include/dxc/dxcerrors.h
  install -Dm644 ../${_pkgname}-${pkgver}/include/dxc/dxcisense.h "${pkgdir}"${MINGW_PREFIX}/include/dxc/dxcisense.h

  install -Dm644 ../${_pkgname}-${pkgver}/LICENSE.TXT "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.TXT
}

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 52107180..db43ce77 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -109,7 +109,9 @@ if(WIN32)
     add_compile_options(/guard:cf)
     add_link_options(/guard:cf)
   else()
-    add_compile_options(-fcf-protection)
+    if(LLVM_NATIVE_ARCH MATCHES "X86")
+      add_compile_options(-fcf-protection)
+    endif()
   endif()
 endif(WIN32)
 
diff --git a/cmake/modules/HandleLLVMOptions.cmake b/cmake/modules/HandleLLVMOptions.cmake
index acf76c29..49a5a91a 100644
--- a/cmake/modules/HandleLLVMOptions.cmake
+++ b/cmake/modules/HandleLLVMOptions.cmake
@@ -230,6 +230,10 @@ endif( CMAKE_SIZEOF_VOID_P EQUAL 8 AND NOT WIN32 )
 
 if (LLVM_BUILD_STATIC)
   set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
+  if(MINGW)
+    # We want to mimic MSVC standalone build here
+    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -static")
+  endif()
 endif()
 
 if( XCODE )
@@ -418,12 +422,18 @@ elseif( LLVM_COMPILER_IS_GCC_COMPATIBLE )
     append("-Wno-unknown-pragmas" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
 
     if (MINGW)
+      append("-Wno-cast-function-type-mismatch" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-implicit-fallthrough" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-missing-exception-spec" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-reorder-ctor" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-sign-compare" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-unused-const-variable" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
       append("-Wno-unused-function" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
+      append("-Wno-unused-private-field" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
+
+      if (CMAKE_BUILD_TYPE STREQUAL "Debug")
+        append("-Wno-gnu-zero-variadic-macro-arguments" CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
+      endif()
     endif()
 
     add_flag_if_supported("-Wno-unused-but-set-variable" UNUSED_BUT_SET_VARIABLE)
diff --git a/projects/CMakeLists.txt b/projects/CMakeLists.txt
index 9f361a95..93ee2d85 100644
--- a/projects/CMakeLists.txt
+++ b/projects/CMakeLists.txt
@@ -1,11 +1,11 @@
 set(DXC_PROJECTS_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
 set(DXC_PROJECTS_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
 
-if(WIN32)
+if(MSVC)
 add_subdirectory(include/Tracing) # DxcRuntimeEtw target
 
 if(HLSL_BUILD_DXILCONV)
   add_subdirectory(dxilconv)
 endif (HLSL_BUILD_DXILCONV)
 
-endif (WIN32)
+endif (MSVC)
diff --git a/tools/clang/tools/dxcvalidator/CMakeLists.txt b/tools/clang/tools/dxcvalidator/CMakeLists.txt
index 28e56ab7..3a51214b 100644
--- a/tools/clang/tools/dxcvalidator/CMakeLists.txt
+++ b/tools/clang/tools/dxcvalidator/CMakeLists.txt
@@ -19,10 +19,5 @@ add_clang_library(dxcvalidator
   dxcvalidator.cpp
   )
 
-if (MINGW)
-  target_link_options(dxcvalidator PUBLIC -mconsole -municode)
-  target_link_libraries(dxcvalidator PRIVATE version)
-endif()
-
 target_compile_definitions(dxcvalidator
     PRIVATE VERSION_STRING_SUFFIX=" for ${CMAKE_SYSTEM_NAME}")
diff --git a/tools/clang/tools/dxildll/CMakeLists.txt b/tools/clang/tools/dxildll/CMakeLists.txt
index 67a24d11..4974da84 100644
--- a/tools/clang/tools/dxildll/CMakeLists.txt
+++ b/tools/clang/tools/dxildll/CMakeLists.txt
@@ -41,7 +41,7 @@ set(sources
   dxcvalidator.cpp
 )
 
-if (WIN32)
+if (MSVC)
 add_clang_library(dxildll SHARED ${sources})
 list(APPEND DXCLibs
   kernel32.lib
@@ -58,7 +58,7 @@ target_link_libraries(dxildll PRIVATE
   dxcvalidator
 )
 
-if (WIN32)
+if (MSVC)
 add_dependencies(dxildll
     ${DXCDependencies}
     DxcEtw
@@ -77,7 +77,7 @@ if (WIN32)
     set_target_properties(${target_name} PROPERTIES SOURCES "${sources}")
 
     set_property(SOURCE dxildll.rc PROPERTY COMPILE_DEFINITIONS "INCLUDE_HLSL_VERSION_FILE=1")
-    set_property(SOURCE dxildll.rc PROPERTY COMPILE_OPTIONS "/I" "${HLSL_VERSION_LOCATION}" "/I" "${LLVM_MAIN_SRC_DIR}")
+    set_property(SOURCE dxildll.rc PROPERTY COMPILE_OPTIONS "-I" "${HLSL_VERSION_LOCATION}" "-I" "${LLVM_MAIN_SRC_DIR}")
 endif()
 
 set_target_properties(dxildll

diff --git a/src/3rdparty/chromium/third_party/ffmpeg/BUILD.gn b/src/3rdparty/chromium/third_party/ffmpeg/BUILD.gn
index c04ed59..2ded187 100644
--- a/src/3rdparty/chromium/third_party/ffmpeg/BUILD.gn
+++ b/src/3rdparty/chromium/third_party/ffmpeg/BUILD.gn
@@ -89,7 +89,7 @@ config("ffmpeg_dependent_config") {
   ]
 }
 
-if (is_win) {
+if (is_msvc) {
   # Stub generator script and signatures of all functions used by Chrome.
   generate_stubs_script = "//tools/generate_stubs/generate_stubs.py"
 
@@ -123,6 +123,7 @@ config("ffmpeg_warnings") {
 
       # ffmpeg uses its own deprecated functions.
       "-Wno-deprecated-declarations",
+      "-Wno-deprecated-pragma",
 
       # ffmpeg doesn't care about pointer constness.
       "-Wno-incompatible-pointer-types",
@@ -145,6 +146,7 @@ config("ffmpeg_warnings") {
 
       # ffmpeg has a lot of unused variables.
       "-Wno-unused-variable",
+      "-Wno-unused-but-set-variable",
 
       # This fires on `av_assert0(!"valid element size")` in utils.c
       "-Wno-string-conversion",
@@ -378,7 +380,21 @@ target(link_target_type, "ffmpeg_internal") {
     if (is_ios) {
       libs -= [ "rt" ]
     }
-  } else if (is_win) {
+  } else if (is_mingw) {
+    configs -= [ "//build/config/win:lean_and_mean" ]
+
+    defines += [
+      "_ISOC99_SOURCE",
+      "_LARGEFILE_SOURCE",
+      "HAVE_AV_CONFIG_H",
+    ]
+
+    cflags += [
+      "-fno-math-errno",
+      "-fno-signed-zeros",
+      "-fno-tree-vectorize",
+    ]
+  } else if (is_msvc) {
     defines += [
       "_ISOC99_SOURCE",
       "_LARGEFILE_SOURCE",
diff --git a/src/3rdparty/chromium/third_party/ffmpeg/libavutil/internal.h b/src/3rdparty/chromium/third_party/ffmpeg/libavutil/internal.h
index 6937169..f2b4b61 100644
--- a/src/3rdparty/chromium/third_party/ffmpeg/libavutil/internal.h
+++ b/src/3rdparty/chromium/third_party/ffmpeg/libavutil/internal.h
@@ -123,7 +123,7 @@ void avpriv_request_sample(void *avc,
                            const char *msg, ...) av_printf_format(2, 3);
 #endif
 
-#if HAVE_LIBC_MSVCRT
+#if defined(_MSC_VER) && HAVE_LIBC_MSVCRT
 #include <crtversion.h>
 #if defined(_VC_CRT_MAJOR_VERSION) && _VC_CRT_MAJOR_VERSION < 14
 #pragma comment(linker, "/include:" EXTERN_PREFIX "avpriv_strtod")

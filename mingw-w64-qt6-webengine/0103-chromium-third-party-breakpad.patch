diff --git a/src/3rdparty/chromium/third_party/breakpad/BUILD.gn b/src/3rdparty/chromium/third_party/breakpad/BUILD.gn
index 9cf6da4..9219396 100644
--- a/src/3rdparty/chromium/third_party/breakpad/BUILD.gn
+++ b/src/3rdparty/chromium/third_party/breakpad/BUILD.gn
@@ -1064,6 +1064,9 @@ if (is_win) {
         "$visual_studio_path/DIA SDK/include",
         "breakpad/src",
       ]
+      if (is_mingw) {
+        include_dirs -= [ "$visual_studio_path/DIA SDK/include" ]
+      }
 
       sources = [
         "breakpad/src/tools/windows/converter/ms_symbol_server_converter.cc",
@@ -1071,7 +1074,11 @@ if (is_win) {
 
       deps = [ "//third_party/breakpad:common_windows" ]
 
-      libs = [ "Pathcch.lib" ]
+      if (is_mingw) {
+        libs = [ "pathcch" ]
+      } else {
+        libs = [ "Pathcch.lib" ]
+      }
     }
 
     executable("dump_syms") {
@@ -1086,18 +1093,23 @@ if (is_win) {
 
       deps = [ "//third_party/breakpad:common_windows" ]
 
-      lib_dirs = []
-      if (current_cpu == "x64") {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+      if (is_mingw) {
+        include_dirs -= [ "$visual_studio_path/DIA SDK/include", ]
+        libs = [ "imagehlp" ]
       } else {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
+        lib_dirs = []
+        if (current_cpu == "x64") {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+        } else {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
+        }
+
+        libs = [
+          "diaguids.lib",
+          "imagehlp.lib",
+        ]
       }
 
-      libs = [
-        "diaguids.lib",
-        "imagehlp.lib",
-      ]
-
       if (is_clang) {
         # clang complains about microsoft-specific goto extensions. Instead of
         # rewriting decade-old, goto-ridden code, disable the warning.
@@ -1112,19 +1124,24 @@ if (is_win) {
       ]
       sources = [ "breakpad/src/tools/windows/symupload/symupload.cc" ]
       deps = [ "//third_party/breakpad:common_windows" ]
-      ldflags = [ "/LARGEADDRESSAWARE" ]
-      lib_dirs = []
-      if (current_cpu == "x64") {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+
+      if (is_mingw) {
+        libs = [ "imagehlp" ]
       } else {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
+        ldflags = [ "/LARGEADDRESSAWARE" ]
+        lib_dirs = []
+        if (current_cpu == "x64") {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+        } else {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
+        }
+
+        libs = [
+          "diaguids.lib",
+          "imagehlp.lib",
+        ]
       }
 
-      libs = [
-        "diaguids.lib",
-        "imagehlp.lib",
-      ]
-
       if (is_clang) {
         # clang complains about microsoft-specific goto extensions. Instead of
         # rewriting decade-old, goto-ridden code, disable the warning.
@@ -1153,23 +1170,29 @@ if (is_win) {
         "//third_party/breakpad:ms_symbol_server_converter",
       ]
 
-      ldflags = [
-        "/DELAYLOAD:dbghelp.dll",
-        "/DELAYLOAD:dwmapi.dll",
-        "/DELAYLOAD:uxtheme.dll",
-      ]
 
-      lib_dirs = []
-      if (current_cpu == "x64") {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+      if (is_mingw) {
+        include_dirs -= [ "$visual_studio_path/DIA SDK/include" ]
+        libs = [ "imagehlp" ]
       } else {
-        lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
-      }
+        ldflags = [
+          "/DELAYLOAD:dbghelp.dll",
+          "/DELAYLOAD:dwmapi.dll",
+          "/DELAYLOAD:uxtheme.dll",
+        ]
 
-      libs = [
-        "diaguids.lib",
-        "imagehlp.lib",
-      ]
+        lib_dirs = []
+        if (current_cpu == "x64") {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib/amd64" ]
+        } else {
+          lib_dirs += [ "$visual_studio_path/DIA SDK/lib" ]
+        }
+
+        libs = [
+          "diaguids.lib",
+          "imagehlp.lib",
+        ]
+      }
 
       if (is_clang) {
         # clang complains about microsoft-specific goto extensions. Instead of

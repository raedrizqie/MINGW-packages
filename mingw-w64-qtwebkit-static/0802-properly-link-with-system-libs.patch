diff --git a/Source/cmake/FindICU.cmake b/Source/cmake/FindICU.cmake
index 4e93286..6364d5f 100644
--- a/Source/cmake/FindICU.cmake
+++ b/Source/cmake/FindICU.cmake
@@ -33,7 +33,11 @@ mark_as_advanced(ICU_LIBRARY)
 # Copy the results to the output variables.
 if (ICU_INCLUDE_DIR AND ICU_LIBRARY)
     set(ICU_FOUND 1)
-    set(ICU_LIBRARIES ${ICU_LIBRARY})
+    if (QT_STATIC_BUILD)
+        set(ICU_LIBRARIES libicuuc.a libicudt.a)
+    else ()
+        set(ICU_LIBRARIES ${ICU_LIBRARY})
+    endif ()
     set(ICU_INCLUDE_DIRS ${ICU_INCLUDE_DIR})
 
     set(ICU_VERSION 0)
@@ -56,7 +60,11 @@ if (ICU_INCLUDE_DIR AND ICU_LIBRARY)
     mark_as_advanced(ICU_I18N_LIBRARY)
     if (ICU_I18N_LIBRARY)
         set(ICU_I18N_FOUND 1)
-        set(ICU_I18N_LIBRARIES ${ICU_I18N_LIBRARY})
+        if (QT_STATIC_BUILD)
+            set(ICU_I18N_LIBRARIES libicuin.a libicuuc.a libicudt.a)
+        else ()
+            set(ICU_I18N_LIBRARIES ${ICU_I18N_LIBRARY})
+        endif ()
     else ()
         set(ICU_I18N_FOUND 0)
         set(ICU_I18N_LIBRARIES)
diff --git a/Source/cmake/FindWOFF2Dec.cmake b/Source/cmake/FindWOFF2Dec.cmake
index 4927eee..2956e57 100644
--- a/Source/cmake/FindWOFF2Dec.cmake
+++ b/Source/cmake/FindWOFF2Dec.cmake
@@ -41,6 +41,15 @@ find_library(WOFF2DEC_LIBRARIES
     HINTS ${PC_WOFF2DEC_LIBDIR}
 )
 
+if (PC_WOFF2DEC_FOUND)
+    if (QT_STATIC_BUILD)
+        set(WOFF2DEC_LIBRARIES libwoff2dec.a libwoff2common.a libbrotlidec.a libbrotlicommon.a)
+    else ()
+        set(WOFF2DEC_LIBRARIES ${WOFF2DEC_LIBRARIES})
+    endif ()
+    message(STATUS "Found WOFF2DEC libraries: ${WOFF2DEC_LIBRARIES}")
+endif ()
+
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(WOFF2Dec
     REQUIRED_VARS WOFF2DEC_INCLUDE_DIRS WOFF2DEC_LIBRARIES
diff --git a/Source/cmake/OptionsQt.cmake b/Source/cmake/OptionsQt.cmake
index 1ee60b7..ae3aab7 100644
--- a/Source/cmake/OptionsQt.cmake
+++ b/Source/cmake/OptionsQt.cmake
@@ -472,6 +472,14 @@ if (SQLITE3_SOURCE_DIR)
     set(SQLITE_FOUND 1)
 else ()
     find_package(Sqlite REQUIRED)
+    if (SQLITE_FOUND)
+        if (QT_STATIC_BUILD)
+            set(SQLITE_LIBRARIES libsqlite3.a libz.a)
+        else ()
+            set(SQLITE_LIBRARIES libsqlite3.dll.a)
+        endif ()
+        message(STATUS "Found SQLITE libraries: ${SQLITE_LIBRARIES}")
+    endif ()
 endif ()
 
 find_package(Threads REQUIRED)
@@ -479,9 +487,16 @@ find_package(Threads REQUIRED)
 if (USE_LIBJPEG)
     # Additional names of libjpeg to search (fixed in CMake 3.12.0)
     set(JPEG_NAMES jpeg-static libjpeg-static)
-    find_package(JPEG)
+    find_package(JPEG REQUIRED)
     if (NOT JPEG_FOUND)
         message(FATAL_ERROR "libjpeg not found. Please make sure that CMake can find its header files and libraries, or build with -DUSE_LIBJPEG=OFF with possible degradation of user experience")
+    else ()
+        if (QT_STATIC_BUILD)
+            set(JPEG_LIBRARIES libjpeg.a)
+        else ()
+            set(JPEG_LIBRARIES libjpeg.dll.a)
+        endif ()
+        message(STATUS "Found JPEG libraries: ${JPEG_LIBRARIES}")
     endif ()
 else ()
     message(WARNING "USE_LIBJPEG is disabled, will attempt using QImageReader to decode JPEG with possible degradation of user experience")
@@ -489,12 +504,32 @@ endif ()
 
 if (NOT QT_BUNDLED_PNG)
     find_package(PNG REQUIRED)
+    if (NOT PNG_FOUND)
+        message(FATAL_ERROR "libpng not found. Please make sure that CMake can find its header files and libraries")
+    else ()
+        if (QT_STATIC_BUILD)
+            set(PNG_LIBRARIES libpng16.a libz.a)
+        else ()
+            set(PNG_LIBRARIES libpng.dll.a)
+        endif ()
+        message(STATUS "Found PNG libraries: ${PNG_LIBRARIES}")
+    endif ()
 else ()
     set(PNG_FOUND 1)
 endif ()
 
 if (NOT QT_BUNDLED_ZLIB)
     find_package(ZLIB REQUIRED)
+    if (NOT ZLIB_FOUND)
+        message(FATAL_ERROR "libz not found. Please make sure that CMake can find its header files and libraries")
+    else ()
+        if (QT_STATIC_BUILD)
+            set(ZLIB_LIBRARIES libz.a)
+        else ()
+            set(ZLIB_LIBRARIES libz.dll.a)
+        endif ()
+        message(STATUS "Found ZLIB libraries: ${ZLIB_LIBRARIES}")
+    endif ()
 else ()
     set(ZLIB_FOUND 1)
 endif ()
@@ -530,9 +565,27 @@ if (MACOS_FORCE_SYSTEM_XML_LIBRARIES)
         set(LIBXSLT_LIBRARIES xslt)
     endif ()
 else ()
-    find_package(LibXml2 2.8.0 REQUIRED)
+    find_package(LibXml2 2.8.0 QUIET)
+    if (LIBXML2_FOUND)
+        if (QT_STATIC_BUILD)
+            set(LIBXML2_LIBRARIES libxml2.a libiconv.a liblzma.a libz.a)
+            add_definitions(-DLIBXML_STATIC)
+        else ()
+            set(LIBXML2_LIBRARIES libxml2.dll.a)
+        endif ()
+        message(STATUS "Found LIBXML2 libraries: ${LIBXML2_LIBRARIES}")
+    endif ()
     if (ENABLE_XSLT)
-        find_package(LibXslt 1.1.7 REQUIRED)
+        find_package(LibXslt 1.1.7 QUIET)
+        if (LIBXSLT_FOUND)
+            if (QT_STATIC_BUILD)
+                set(LIBXSLT_LIBRARIES libxslt.a libxml2.a libiconv.a liblzma.a libz.a)
+                add_definitions(-DLIBXSLT_STATIC)
+            else ()
+                set(LIBXSLT_LIBRARIES libxslt.dll.a libxml2.dll.a)
+            endif ()
+            message(STATUS "Found LIBXSLT libraries: ${LIBXSLT_LIBRARIES}")
+        endif ()
     endif ()
 endif ()
 
diff --git a/Tools/qmake/projects/run_cmake.pro b/Tools/qmake/projects/run_cmake.pro
index 7187266..4e258a0 100644
--- a/Tools/qmake/projects/run_cmake.pro
+++ b/Tools/qmake/projects/run_cmake.pro
@@ -40,14 +40,14 @@ build_pass|!debug_and_release {
         CMAKE_CONFIG += USE_LIBJPEG=OFF
     }
 
-    !qtConfig(system-png):qtConfig(png):exists($$QTBASE_DIR) {
+    !static:!qtConfig(system-png):qtConfig(png):exists($$QTBASE_DIR) {
         CMAKE_CONFIG += \
             QT_BUNDLED_PNG=1 \
             PNG_INCLUDE_DIRS=$$QTBASE_DIR/src/3rdparty/libpng \
             PNG_LIBRARIES=$$staticLibPath(qtpng)
     }
 
-    !qtConfig(system-zlib):exists($$QTBASE_DIR) {
+    !static:!qtConfig(system-zlib):exists($$QTBASE_DIR) {
         CMAKE_CONFIG += QT_BUNDLED_ZLIB=1
 
         exists($$QTBASE_DIR/src/3rdparty/zlib/src/zlib.h): \
